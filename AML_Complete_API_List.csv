Module,Controller,HTTP Method,Endpoint,Description,Authentication Required,Authorization Level,Request Body Type,Response Type
Authentication,AuthController,POST,/api/auth/login,User login authentication,No,Public,JSON (LoginDto),JSON (AuthResponse)
Registration,RegistrationController,POST,/api/register,Register new customer,No,Public,JSON (RegistrationRequest),JSON (Customer details)
Registration,RegistrationController,POST,/api/register/verify-otp,Verify OTP for registration,No,Public,Query Parameters (email & otp),JSON (verification status)
Registration,RegistrationController,POST,/api/register/{customerId}/documents,Upload customer documents during registration,No,Public,Multipart Form Data (file & docType),JSON (document details)
Bank Accounts,BankAccountController,POST,/api/accounts,Create new bank account,Yes,ROLE_CUSTOMER,JSON (CreateAccountDto),JSON (BankAccountDto)
Bank Accounts,BankAccountController,GET,/api/accounts,Get user's bank accounts,Yes,ROLE_CUSTOMER,None,JSON (List<BankAccountDto>)
Transactions,TransactionController,POST,/api/transactions/deposit,Deposit money to account,Yes,ROLE_CUSTOMER,JSON (DepositDto),JSON (TransactionDto)
Transactions,TransactionController,POST,/api/transactions/withdraw,Withdraw money from account,Yes,ROLE_CUSTOMER,JSON (WithdrawalDto),JSON (TransactionDto)
Transactions,TransactionController,POST,/api/transactions/transfer,Transfer money between accounts,Yes,ROLE_CUSTOMER,JSON (TransferDto),JSON (TransactionDto)
Transactions,TransactionController,GET,/api/transactions/history,Get user's transaction history,Yes,ROLE_CUSTOMER,None,JSON (List<TransactionDto>)
Transactions,TransactionController,GET,/api/transactions/history/{accountNumber},Get specific account transaction history,Yes,ROLE_CUSTOMER,None,JSON (List<TransactionDto>)
Transactions,TransactionController,GET,/api/transactions/balance/{accountNumber},Get account balance,Yes,ROLE_CUSTOMER,None,JSON (BalanceDto)
Transactions,TransactionController,GET,/api/transactions/status/{transactionId},Get transaction status,Yes,ROLE_CUSTOMER,None,JSON (TransactionDto)
Customer,CustomerController,GET,/api/customer/profile,Get customer profile,Yes,ROLE_ADMIN or ROLE_CUSTOMER,None,JSON (Customer)
Customer,CustomerController,GET,/api/customer/kyc-status,Get KYC status,Yes,ROLE_ADMIN or ROLE_CUSTOMER,None,JSON (KycStatusResponse)
Customer Alerts,CustomerAlertController,GET,/api/customer/alerts,Get customer's alerts,Yes,ROLE_CUSTOMER,None,JSON (List<AlertDto>)
Customer Alerts,CustomerAlertController,GET,/api/customer/alerts/{alertId},Get specific alert details,Yes,ROLE_CUSTOMER,None,JSON (AlertDto)
Customer Alerts,CustomerAlertController,GET,/api/customer/alerts/transaction/{transactionId},Get alerts for specific transaction,Yes,ROLE_CUSTOMER,None,JSON (List<AlertDto>)
Documents,DocumentController,POST,/api/documents/upload,Upload customer documents,Yes,Authenticated User,Multipart Form Data (file & docType),JSON (document details)
Compliance,ComplianceController,GET,/api/compliance/alerts,Get all open alerts,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (List<AlertDto>)
Compliance,ComplianceController,GET,/api/compliance/alerts/{id},Get alert by ID,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (AlertDto)
Compliance,ComplianceController,POST,/api/compliance/alerts/{id}/case,Create case from alert,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (CaseDto)
Compliance,ComplianceController,POST,/api/compliance/cases/{id}/notes,Add note to case,Yes,OFFICER or ADMIN or ROLE_OFFICER,JSON (NoteDto),JSON (CaseDto)
Compliance - Transaction Management,ComplianceController,POST,/api/compliance/transactions/{transactionId}/approve,Approve flagged or blocked transaction,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (TransactionDto)
Compliance - Transaction Management,ComplianceController,POST,/api/compliance/transactions/{transactionId}/reject,Reject flagged or blocked transaction,Yes,OFFICER or ADMIN or ROLE_OFFICER,Query Parameter (reason),JSON (TransactionDto)
Compliance - Transaction Management,ComplianceController,GET,/api/compliance/transactions/flagged,Get all flagged transactions awaiting review,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (List<TransactionDto>)
Compliance - Transaction Management,ComplianceController,GET,/api/compliance/transactions/blocked,Get all blocked transactions for review,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (List<TransactionDto>)
Compliance - Transaction Management,ComplianceController,GET,/api/compliance/transactions/review,Get all transactions requiring review (flagged + blocked),Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (List<TransactionDto>)
Compliance - Transaction Management,ComplianceController,GET,/api/compliance/transactions/{transactionId},Get transaction details for compliance review,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (TransactionDto)
Compliance - Case Management,ComplianceController,GET,/api/compliance/cases/under-investigation,Get all cases under investigation,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (List<CaseDto>)
Compliance - Case Management,ComplianceController,GET,/api/compliance/cases/resolved,Get all resolved cases,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (List<CaseDto>)
Compliance - Case Management,ComplianceController,GET,/api/compliance/cases/{caseId},Get case details by ID,Yes,OFFICER or ADMIN or ROLE_OFFICER,None,JSON (CaseDto)
Admin - Users,AdminController,GET,/api/admin/users,Get all users,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<UserDto>)
Admin - Users,AdminController,POST,/api/admin/users,Create new user,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,JSON (CreateUserDto),JSON (UserDto)
Admin - Rules,AdminController,GET,/api/admin/rules,Get all AML rules,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<RuleDto>)
Admin - Rules,AdminController,POST,/api/admin/rules,Create new AML rule,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,JSON (RuleDto),JSON (RuleDto)
Admin - Keywords,AdminController,GET,/api/admin/keywords,Get all suspicious keywords,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<SuspiciousKeywordDto>)
Admin - Keywords,AdminController,POST,/api/admin/keywords,Add suspicious keyword,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,JSON (SuspiciousKeywordDto),JSON (SuspiciousKeywordDto)
Admin - Accounts,AdminController,GET,/api/admin/accounts,Get all bank accounts,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<BankAccountDto>)
Admin - Accounts,AdminController,GET,/api/admin/accounts/pending,Get pending approval accounts,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<BankAccountDto>)
Admin - Accounts,AdminController,GET,/api/admin/accounts/{id},Get account by ID,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (BankAccountDto)
Admin - Accounts,AdminController,POST,/api/admin/accounts/{id}/approve,Approve bank account,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (BankAccountDto)
Admin - Accounts,AdminController,POST,/api/admin/accounts/{id}/reject,Reject bank account,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (BankAccountDto)
Admin - Accounts,AdminController,POST,/api/admin/accounts/{id}/suspend,Suspend bank account,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (BankAccountDto)
Admin - Accounts,AdminController,POST,/api/admin/accounts/{id}/activate,Activate bank account,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (BankAccountDto)
Admin - Debug,AdminController,GET,/api/admin/debug/auth,Debug authentication info,Yes,Public (permitAll),None,JSON (authentication details)
Admin - Compliance Officers,AdminController,POST,/api/admin/compliance-officers,Create compliance officer,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,JSON (CreateUserDto),JSON (UserDto)
Admin - Compliance Officers,AdminController,POST,/api/admin/compliance-officers/{userId},Add existing user as compliance officer,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (UserDto)
Admin - Compliance Officers,AdminController,POST,/api/admin/compliance-officers/{userId}/remove,Remove compliance officer role,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (UserDto)
Admin - Compliance Officers,AdminController,GET,/api/admin/compliance-officers,Get all compliance officers,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<UserDto>)
Admin - Customer Management,AdminController,POST,/api/admin/customers/{userId}/block,Block customer,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,Query Parameter (reason),JSON (UserDto)
Admin - Customer Management,AdminController,POST,/api/admin/customers/{userId}/unblock,Unblock customer,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (UserDto)
Admin - Customer Management,AdminController,GET,/api/admin/customers/blocked,Get blocked customers,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<UserDto>)
Admin - Audit Logs,AdminController,GET,/api/admin/audit-logs,Get all audit logs,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<AuditLog>)
Admin - Audit Logs,AdminController,GET,/api/admin/audit-logs/user/{username},Get audit logs by username,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<AuditLog>)
Admin - Audit Logs,AdminController,GET,/api/admin/audit-logs/action/{action},Get audit logs by action,Yes,ROLE_ADMIN or ROLE_SUPER_ADMIN,None,JSON (List<AuditLog>)
Rule Engine,TransactionController (Rule Engine),POST,/api/transactions/initiate,Initiate transaction for rule evaluation,No,Public,Query Parameters (customerId & amount & currency & receiverCountryCode & description),JSON (Transaction)
